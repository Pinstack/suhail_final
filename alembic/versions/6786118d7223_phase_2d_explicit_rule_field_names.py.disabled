"""Phase 2D: Explicit rule field names

Revision ID: 6786118d7223
Revises: fc0701358f25
Create Date: 2025-07-01 11:50:10.112840

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6786118d7223'
down_revision: Union[str, Sequence[str], None] = 'fc0701358f25'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema: rename rule_id columns to explicit names."""
    # Rename zoning_rules.rule_id -> zoning_rule_id
    op.alter_column('zoning_rules', 'rule_id', new_column_name='zoning_rule_id', existing_type=sa.String())
    # Rename parcels.rule_id -> zoning_rule_id
    op.alter_column('parcels', 'rule_id', new_column_name='zoning_rule_id', existing_type=sa.String())
    # Rename building_rules.rule_id -> building_rule_id
    op.alter_column('building_rules', 'rule_id', new_column_name='building_rule_id', existing_type=sa.String())


def downgrade() -> None:
    """Downgrade schema: revert explicit rule field names."""
    # Revert building_rules.rule_id
    op.alter_column('building_rules', 'building_rule_id', new_column_name='rule_id', existing_type=sa.String())
    # Revert parcels.rule_id
    op.alter_column('parcels', 'zoning_rule_id', new_column_name='rule_id', existing_type=sa.String())
    # Revert zoning_rules.rule_id
    op.alter_column('zoning_rules', 'zoning_rule_id', new_column_name='rule_id', existing_type=sa.String())
